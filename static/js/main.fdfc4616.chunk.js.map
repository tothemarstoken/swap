{"version":3,"sources":["components/img/bnb.svg","components/ui-components/ConnectButton.js","components/ui-components/ColorModeChanger.js","components/img/logotothemars.png","components/ui-components/Nav.js","components/img/logotothemars.svg","components/contracts/ContractAddress.jsx","components/ui-components/MartianSwap.js","components/img/metamask.png","components/img/trustwallet.svg","components/ui-components/QRCodePay.js","App.jsx","index.jsx"],"names":["ConnectButton","useEthers","activateBrowserWallet","active","account","chainId","colorMode","deactivate","useColorMode","useToast","useMediaQuery","isPC","a","display","alignItems","py","as","bgColor","borderRadius","borderColor","borderWidth","m","px","height","spacing","Color","fontSize","fontWeight","mr","slice","src","bnbLogo","boxSize","FaCheckCircle","pl","color","BsExclamationOctagonFill","paddingLeft","paddingRight","backgroundColor","onClick","ColorModeChanger","toggleColorMode","position","align","justify","icon","_hover","border","_focus","_active","Nav","width","h","minWidth","zIndex","href","logotothemars","objectFit","AiFillHome","MartianSwapMainnet","rate","MartianSwap","FetchBNBBalance","useEtherBalance","BNBBalance","parseFloat","formatEther","toFixed","useSendTransaction","sendTransaction","state","FetchToTheMarsBalance","useTokenBalance","ToTheMarsBalance","formatUnits","useState","disabled","setDisabled","bnbValue","setBnbValue","martianValue","setMartianValue","MartianSwapInterface","utils","Interface","abi","to","value","parseEther","toString","console","log","alert","Contract","useEffect","status","pt","pb","boxShadow","p","BsGear","paddingTop","w","max","id","onChange","e","bnb","target","martian","placeholder","_placeholder","children","BNBLogo","ToTheMarsLogo","QRCodePay","useClipboard","hasCopied","onCopy","toast","maxWidth","textAlign","padding","title","description","duration","isClosable","pr","BsCheckAll","MetamaskLogo","TrustwalletLogo","App","configT","initialColorMode","useSystemColorMode","config","readOnlyChainId","ChainId","BSC","readOnlyUrls","theme","extendTheme","rootElement","document","getElementById","ReactDOM","render","DAppProvider"],"mappings":"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","file":"static/js/main.fdfc4616.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bnb.95c82668.svg\";","import  React from \"react\";\r\nimport {\r\n  Button,\r\n  useMediaQuery,\r\n  Box,\r\n  Text,\r\n  HStack,\r\n  useColorMode,\r\n  Tooltip,\r\n  Image,\r\n  useToast,\r\n  IconButton,\r\n  Icon,\r\n} from \"@chakra-ui/react\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport { BsExclamationOctagonFill } from \"react-icons/bs\";\r\nimport { FaCheckCircle } from \"react-icons/fa\";\r\nimport bnbLogo from \"../img/bnb.svg\";\r\nimport { useState } from \"react\";\r\n\r\nfunction ConnectButton() {\r\n  const { activateBrowserWallet, active, account, chainId, deactivate } =\r\n    useEthers();\r\n\r\n  const { colorMode } = useColorMode();\r\n  const toast = useToast();\r\n\r\n  const [isPC] = useMediaQuery(\"(min-width: 950px)\");\r\n\r\n  async function activateWallet() {\r\n    activateBrowserWallet();\r\n    \r\n  }\r\n\r\n  function deactivateWallet() {\r\n    deactivate();\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {active && account ? (\r\n        <HStack display=\"flex\" alignItems=\"center\" py=\"0\">\r\n          <Box\r\n            as=\"button\"\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            bgColor=\"transparent\"\r\n            borderRadius=\"xl\"\r\n            borderColor={\r\n              colorMode === \"light\"\r\n                ? chainId == \"56\"\r\n                  ? \"teal.400\"\r\n                  : \"red.400\"\r\n                : chainId == \"56\"\r\n                ? \" white\"\r\n                : \"red.400\"\r\n            }\r\n            borderWidth=\"1px\"\r\n            m=\"1px\"\r\n            px={3}\r\n            height=\"38px\"\r\n          >\r\n            {active && account && chainId == \"56\" ? (\r\n              <HStack spacing=\"0px\">\r\n                <Text\r\n                  Color={colorMode === \"light\" ? \"black\" : \"white\"}\r\n                  fontSize=\"md\"\r\n                  fontWeight=\"medium\"\r\n                  mr=\"2\"\r\n                >\r\n                  {account &&\r\n                    `${account.slice(0, 8)}\r\n            `}\r\n                </Text>\r\n                <Image src={bnbLogo} boxSize=\"30px\" />{\" \"}\r\n              </HStack>\r\n            ) : isPC ? (\r\n              \"Please switch to BSC Mainnet\"\r\n            ) : (\r\n              \"No BSC Network !\"\r\n            )}\r\n\r\n            {chainId == \"56\" ? (\r\n              <Icon\r\n                as={FaCheckCircle}\r\n                pl=\"5px\"\r\n                boxSize=\"25px\"\r\n                color=\"green.400\"\r\n              />\r\n            ) : (\r\n              <Icon\r\n                as={BsExclamationOctagonFill}\r\n                pl=\"5px\"\r\n                boxSize=\"23px\"\r\n                color=\"red.400\"\r\n              />\r\n            )}\r\n          </Box>\r\n        </HStack>\r\n      ) : (\r\n        <Button\r\n          paddingLeft={isPC ? \"20px\" : \"10px\"}\r\n          paddingRight={isPC ? \"20px\" : \"10px\"}\r\n          borderRadius=\"25px\"\r\n          backgroundColor=\"orange.400\"\r\n          onClick={activateWallet}\r\n        >\r\n          Connect Wallet\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConnectButton;\r\n","import React from \"react\";\r\nimport { useColorMode, Flex, IconButton } from \"@chakra-ui/react\";\r\nimport { BsFillBrightnessHighFill, BsMoon } from \"react-icons/bs\"\r\n\r\n\r\n\r\nfunction ColorModeChanger() {\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n    return (\r\n        <Flex position=\"sticky\" align=\"center\" justify=\"center\" height=\"10vh\">\r\n            <IconButton \r\n                icon={colorMode == \"light\" ?  <BsMoon/> : <BsFillBrightnessHighFill />} \r\n                bgColor=\"transparent\" \r\n                _hover = {{\r\n                    bgColor: \"transparent\",\r\n                    border: \"none\"\r\n                }}\r\n                _focus={{\r\n                    border: \"none\",\r\n                    bgColor: \"transparent\"\r\n                }}\r\n                _active={{\r\n                    border: \"none\",\r\n                    bgColor: \"transparent\"\r\n                }}\r\n                onClick={toggleColorMode} />\r\n\r\n        </Flex>\r\n\r\n    );\r\n}\r\n\r\nexport default ColorModeChanger\r\n","export default __webpack_public_path__ + \"static/media/logotothemars.2d026759.png\";","import React from \"react\";\r\nimport ConnectButton from \"./ConnectButton\";\r\nimport { HStack, Spacer, Icon, Image, Box, useMediaQuery, useColorMode } from \"@chakra-ui/react\";\r\nimport { AiFillHome } from \"react-icons/ai\";\r\nimport ColorModeChanger from \"./ColorModeChanger\";\r\nimport logotothemars from \"../img/logotothemars.png\"\r\n\r\nfunction Nav() {\r\n  const [isPC] = useMediaQuery(\"(min-width: 750px)\")\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  return (\r\n    <HStack\r\n      width=\"100%\"\r\n      h=\"60px\"\r\n      paddingLeft=\"5%\"\r\n      paddingRight=\"5%\"\r\n      minWidth=\"350px\"\r\n      zIndex=\"5\"\r\n    \r\n      \r\n      \r\n    >\r\n      <Box as=\"a\" href=\"https://www.tothemars.in\">\r\n      <Image\r\n        src={logotothemars}\r\n        href=\"www.tothemars.in\"\r\n        \r\n        boxSize=\"50px\"\r\n        objectFit=\"cover\"\r\n      ></Image>\r\n      </Box>\r\n      <Spacer />\r\n      <Box as=\"a\" href=\"https://www.tothemars.in\">\r\n      <Icon\r\n        boxSize=\"30px\"\r\n        color=\"orange.400\"\r\n        \r\n        as={AiFillHome}\r\n      />\r\n      </Box>\r\n      <ConnectButton />\r\n      \r\n      <ColorModeChanger/>\r\n    </HStack>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","export default __webpack_public_path__ + \"static/media/logotothemars.984311b0.svg\";","// Mainnet\r\nexport const ToTheMarsMainnet = \"0x3ceac5F44c9287dAF2C5C8CCE0faE10897E356d1\"\r\nexport const MartianSwapMainnet = \"0x63799a4da0f96c77ac29caf54d765ea30392cc73\"\r\nexport const DevWallet = \"0xfc1B7a066a94a6Dc82a317Bb7E0CFc6Ceb03c9D0\"\r\nexport const PublicSaleWallet = \"0x4221aB99874412309A3C6c278e4C57Deb6FBFB31\"\r\nexport const MarsMissionReserveWallet = \"\"\r\nexport const rate = 25000\r\nexport const infuraID = \"https://mainnet.infura.io/v3/3165a249c65f4198bf57200109b8fadf\"\r\nexport const bscID = \"https://bsc-dataseed.binance.org/\"\r\nexport const bscIDTestnet = \"https://data-seed-prebsc-1-s1.binance.org:8545/\"\r\n\r\n// Test Network\r\nexport const MulticallAddress = \"0xa361e695a4A272Cb3fe411A9226ec2D3bB9EcD45\"\r\nexport const MartianSwapTestnet = \"0x249d4736F21c331a3B70a667bA0cddFC9181385f\"\r\nexport const ToTheMarsTestnet = \"0xac0b47198e3aa9921d86423f4f1d2ed35a99ce71\"","import React, {useState, useEffect} from \"react\";\r\nimport {\r\n  Flex,\r\n  useColorMode,\r\n  Box,\r\n  HStack,\r\n  VStack,\r\n  Text,\r\n  Divider,\r\n  Spacer,\r\n  Icon,\r\n  useMediaQuery,\r\n  Button,\r\n  NumberInput,\r\n  NumberInputField,\r\n  InputRightElement,\r\n  InputGroup,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\nimport { BsGear } from \"react-icons/bs\";\r\nimport {\r\n  useEthers,\r\n  useEtherBalance,\r\n  useTokenBalance,\r\n  useSendTransaction,\r\n  useContractFunction,\r\n} from \"@usedapp/core\";\r\nimport BNBLogo from \"../img/bnb.svg\";\r\nimport ToTheMarsLogo from \"../img/logotothemars.svg\";\r\nimport { formatEther, formatUnits } from \"@ethersproject/units\";\r\nimport {\r\n  ToTheMarsMainnet,\r\n  rate,\r\n  MartianSwapMainnet,\r\n} from \"../contracts/ContractAddress\";\r\nimport { ethers, utils } from \"ethers\";\r\nimport { abi } from \"../contracts/abi/MartianSwap.json\";\r\nimport { Contract } from \"@usedapp/core/node_modules/ethers\";\r\n\r\nfunction MartianSwap() {\r\n  const [isPC] = useMediaQuery(\"(min-width: 750px)\");\r\n  const { colorMode } = useColorMode();\r\n  const { activateBrowserWallet, account, chainId, active } = useEthers();\r\n  const FetchBNBBalance = useEtherBalance(account);\r\n  const BNBBalance =\r\n   FetchBNBBalance && parseFloat(formatEther(FetchBNBBalance)).toFixed(5);\r\n  const { sendTransaction, state } = useSendTransaction();\r\n  const FetchToTheMarsBalance = useTokenBalance(ToTheMarsMainnet, account);\r\n  const ToTheMarsBalance =\r\n    FetchToTheMarsBalance &&\r\n    parseFloat(formatUnits(FetchToTheMarsBalance)).toFixed(5);\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const [bnbValue, setBnbValue] = useState(0);\r\n  const [martianValue, setMartianValue] = useState(0);\r\n\r\n  const MartianSwapInterface = new utils.Interface(abi);\r\n  const contract = new Contract(MartianSwapMainnet, MartianSwapInterface);\r\n\r\n  function calculateBNB(e) {\r\n    let bnb = e.target.value;\r\n    let martian = (bnb - (bnb * 10) / 100) * rate;\r\n    setBnbValue(bnb);\r\n    setMartianValue(martian);\r\n  }\r\n\r\n  function bnbMaxValue() {\r\n    if (BNBBalance > 0.003) {\r\n      \r\n      let bnb = BNBBalance - 0.0025;\r\n      let martian = (bnb - (bnb * 10) / 100) * rate;\r\n      setBnbValue(bnb.toFixed(8));\r\n      setMartianValue(martian.toFixed(8));\r\n      \r\n    } else {\r\n      alert(\"You need at least 0.003 BNB to buy To The Mars (MARTIAN)\")\r\n    }\r\n  }\r\n\r\n  function calculateMartian(e) {\r\n    let martian = e.target.value;\r\n    let bnb = martian / rate;\r\n    setBnbValue(bnb);\r\n\r\n    setMartianValue(martian);\r\n  }\r\n\r\n  async function transact() {\r\n    if(account && bnbValue > 0.003) {\r\n    try{\r\n      setDisabled(true)\r\n      await sendTransaction({ to: MartianSwapMainnet, value: utils.parseEther(bnbValue.toString()) });\r\n    } catch(e) {\r\n      console.log(e);\r\n    }\r\n  } else {\r\n    alert(\"You need at least 0.003 BNB to buy To The Mars (MARTIAN)\");\r\n  }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(state.status != \"Mining\") {\r\n      setDisabled(false)\r\n      setBnbValue(null)\r\n      setMartianValue(null)\r\n    }\r\n  }, [state])\r\n\r\n  return (\r\n    <Flex\r\n      alignItems=\"flex-start\"\r\n      width=\"100%\"\r\n      height=\"auto\"\r\n      align=\"center\"\r\n      justify=\"center\"\r\n      pt={isPC ? \"10vh\" : \"7vh\"}\r\n      pb={isPC ? \"6vh\" : \"7vh\"}\r\n    >\r\n      <Box\r\n        width={isPC ? \"350px\" : \"325px\"}\r\n        height={isPC ? \"410px\" : \"500px\"}\r\n        borderRadius=\"35px\"\r\n        bgColor=\"teal.400\"\r\n        boxShadow=\"2xl\"\r\n        p=\"20px\"\r\n      >\r\n        <HStack p=\"10px\">\r\n          <Text color=\"white\" fontSize=\"20px\">\r\n            Swap\r\n          </Text>\r\n          <Spacer />\r\n          <Box as=\"button\">\r\n            <Icon\r\n              as={BsGear}\r\n              color=\"white\"\r\n              boxSize=\"20px\"\r\n              _hover={{\r\n                color: \"orange.400\",\r\n              }}\r\n            ></Icon>\r\n          </Box>\r\n        </HStack>\r\n        <Divider />\r\n        <VStack paddingTop=\"20px\" spacing=\"20px\">\r\n          {/* BNB Field */}\r\n          <Box\r\n            w={isPC ? \"310px\" : \"290px\"}\r\n            h={isPC ? \"100px\" : \"130px\"}\r\n            bgColor=\"white\"\r\n            p=\"20px\"\r\n            borderRadius=\"30px\"\r\n          >\r\n            <HStack color={colorMode == \"dark\" ? \"black\" : \"black\"}>\r\n              <Text>From</Text>\r\n              <Spacer />\r\n              {active && account && chainId == \"56\" ? (\r\n                <Text>\r\n                  {BNBBalance} <b>BNB</b>\r\n                </Text>\r\n              ) : (\r\n                <Text>-</Text>\r\n              )}\r\n            </HStack>\r\n            <HStack color={colorMode == \"dark\" ? \"black\" : \"black\"}>\r\n              <InputGroup>\r\n                <NumberInput value={!bnbValue ? \"\" : bnbValue} max={BNBBalance}>\r\n                  <NumberInputField\r\n                    id=\"BNBField\"\r\n                    max={BNBBalance}\r\n                    onChange={calculateBNB}\r\n                    border=\"0\"\r\n                    w={isPC ? \"230px\" : \"210px\"}\r\n                    height=\"50px\"\r\n                    placeholder=\"0.0\"\r\n                    _placeholder={{\r\n                      color: \"grey\",\r\n                    }}\r\n                    p=\"0px\"\r\n                    _focus={{\r\n                      border: \"0px\",\r\n                    }}\r\n                  ></NumberInputField>\r\n                  <InputRightElement\r\n                    children={\r\n                      <Box as=\"button\" pt=\"9px\" onClick={bnbMaxValue}>\r\n                        Max\r\n                      </Box>\r\n                    }\r\n                  />\r\n                </NumberInput>\r\n              </InputGroup>\r\n\r\n              <Image src={BNBLogo} boxSize=\"40px\" objectFit=\"cover\"></Image>\r\n            </HStack>\r\n          </Box>\r\n          <Box\r\n            w={isPC ? \"310px\" : \"290px\"}\r\n            h={isPC ? \"100px\" : \"130px\"}\r\n            bgColor=\"white\"\r\n            p=\"20px\"\r\n            borderRadius=\"30px\"\r\n          >\r\n            <HStack color={colorMode == \"dark\" ? \"black\" : \"black\"}>\r\n              <Text>To</Text>\r\n              <Spacer />\r\n              {active && account && chainId == \"56\" ? (\r\n                <Text>\r\n                  {ToTheMarsBalance} <b>MARTIAN</b>\r\n                </Text>\r\n              ) : (\r\n                <Text>-</Text>\r\n              )}\r\n            </HStack>\r\n            <HStack>\r\n              <InputGroup>\r\n                <NumberInput value={!martianValue ? \"\" : martianValue}>\r\n                  <NumberInputField\r\n                    id=\"MartianField\"\r\n                    onChange={calculateMartian}\r\n                    border=\"0\"\r\n                    w=\"200px\"\r\n                    height=\"50px\"\r\n                    placeholder=\"0.0\"\r\n                    _placeholder={{\r\n                      color: \"grey\",\r\n                    }}\r\n                    p=\"0px\"\r\n                    _focus={{\r\n                      border: \"0px\",\r\n                    }}\r\n                  ></NumberInputField>\r\n                </NumberInput>\r\n              </InputGroup>\r\n              <Spacer />\r\n\r\n              <Image\r\n                src={ToTheMarsLogo}\r\n                boxSize=\"25px\"\r\n                objectFit=\"cover\"\r\n              ></Image>\r\n            </HStack>\r\n          </Box>\r\n          <Button\r\n            width={isPC ? \"310px\" : \"290px\"}\r\n            h={isPC ? \"55px\" : \"70px\"}\r\n            borderRadius=\"25px\"\r\n            backgroundColor=\"orange.400\"\r\n            onClick={() =>\r\n              sendTransaction({\r\n                to: MartianSwapMainnet,\r\n                value: utils.parseEther(\"1.0\"),\r\n              })\r\n            }\r\n            disabled = {disabled}\r\n            onClick={active && account ? transact : activateBrowserWallet}\r\n          >\r\n            {active && account\r\n              ? chainId == \"56\"\r\n                ? \"Swap\"\r\n                : isPC\r\n                ? \"Please switch to BSC Mainnet\"\r\n                : \"No BSC Network\"\r\n              : \"Connect Wallet\"}\r\n          </Button>\r\n        </VStack>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default MartianSwap;\r\n","export default __webpack_public_path__ + \"static/media/metamask.4f06ed22.png\";","export default __webpack_public_path__ + \"static/media/trustwallet.123a2360.svg\";","import React, { useState, Fragment } from \"react\";\r\nimport {\r\n  Flex,\r\n  useClipboard,\r\n  VStack,\r\n  HStack,\r\n  useMediaQuery,\r\n  Heading,\r\n  Box,\r\n  Text,\r\n  useToast,\r\n  Icon,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\nimport { BsCheckAll } from \"react-icons/bs\";\r\nimport QRCode from \"react-qr-code\";\r\nimport MetamaskLogo from \"../img/metamask.png\";\r\nimport TrustwalletLogo from \"../img/trustwallet.svg\";\r\nimport { MartianSwapMainnet } from \"../contracts/ContractAddress\";\r\n\r\nfunction QRCodePay() {\r\n  const [isPC] = useMediaQuery(\"(min-width: 750px)\");\r\n  const [value, setValue] = useState(MartianSwapMainnet);\r\n  const { hasCopied, onCopy } = useClipboard(value);\r\n  const toast = useToast();\r\n\r\n  function copySuccess() {\r\n    onCopy();\r\n    toast({\r\n      title: \"Copied successfully\",\r\n      description: \"MartianSwap smart contract address copied successfully.\",\r\n      status: \"success\",\r\n      duration: 1000,\r\n      isClosable: true,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <VStack\r\n      width=\"100%\"\r\n      h={isPC ? \"100vh\" : \"auto\"}\r\n      minWidth={isPC ? \"350px\" : \"290px\"}\r\n      alignItems=\"center\"\r\n      pb={isPC ? \"25px\" : \"50px\"}\r\n      pt={isPC ? \"20px\" : \"\"}\r\n      \r\n    >\r\n      <Heading align=\"center\" color=\"twitter.500\">\r\n        EVEN MORE EASY WAY TO INVEST\r\n      </Heading>\r\n      <Flex maxWidth=\"700px\" fontSize=\"lg\" textAlign=\"center\" p={isPC ? \"\" : \"10px\"}>\r\n        <Box>\r\n          Metamask not installed ? No worry, just scan QR code from your phone's\r\n          crypto wallet or copy the <b>MartianSwap</b> address and send Smart Chain\r\n          BNB's. You will automatically receive <b>To The Mars</b> into your\r\n          wallet.\r\n        </Box>\r\n      </Flex>\r\n      <Flex padding={isPC ? \"15px\" : \"15px\"}>\r\n        <Box p=\"20px\" borderRadius=\"10px\" backgroundColor=\"white\" >\r\n        <QRCode value={MartianSwapMainnet} />\r\n        </Box>\r\n      </Flex>\r\n      <VStack>\r\n        <Text align=\"center\" maxWidth={isPC ? \"\" : \"290px\"}>\r\n          {MartianSwapMainnet}\r\n        </Text>\r\n        <Box\r\n          as=\"button\"\r\n          onClick={copySuccess}\r\n          bgColor={hasCopied ? \"green.300\" : \"orange.400\"}\r\n          color={hasCopied ? \"black\" : \"white\"}\r\n          pl=\"10px\"\r\n          pr=\"10px\"\r\n          pt=\"5px\"\r\n          pb=\"5px\"\r\n          borderRadius=\"10px\"\r\n        >\r\n          {hasCopied ? (\r\n            <Text>\r\n              MartianSwap Address Copied <Icon as={BsCheckAll} />\r\n            </Text>\r\n          ) : (\r\n            \"Copy MartianSwap Address\"\r\n          )}\r\n        </Box>\r\n      </VStack>\r\n      <HStack spacing=\"30px\" pt=\"20px\">\r\n        <Image\r\n          objectFit=\"cover\"\r\n          boxSize={isPC ? \"50px\" : \"50px\"}\r\n          src={MetamaskLogo}\r\n        />\r\n        <Image\r\n          objectFit=\"cover\"\r\n          boxSize={isPC ? \"50px\" : \"50px\"}\r\n          src={TrustwalletLogo}\r\n        />\r\n      </HStack>\r\n    </VStack>\r\n  );\r\n}\r\n\r\nexport default QRCodePay;\r\n","import \"./App.css\"\nimport Nav from \"./components/ui-components/Nav\";\nimport MartianSwap from \"./components/ui-components/MartianSwap\";\nimport QRCodePay from \"./components/ui-components/QRCodePay\";\nimport { VStack, Text } from \"@chakra-ui/react\";\n\n\n\nexport default function App() {\n  return (\n    <VStack>\n      <Nav />\n      <MartianSwap />\n      <QRCodePay />\n    \n      \n    </VStack>\n  );\n}\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChakraProvider, ColorModeScript, extendTheme, CSSReset } from \"@chakra-ui/react\";\nimport { DAppProvider, ChainId } from \"@usedapp/core\";\n\n\nimport App from \"./App\";\n\n\n\nconst configT =  {\n  initialColorMode: \"light\",\n  useSystemColorMode: false,\n\n}\n\nconst config = {\n  readOnlyChainId: ChainId.BSC,\n \n  readOnlyUrls: {\n    \n    [ChainId.BSC]: \"https://bsc-dataseed.binance.org/\",\n  },\n}\n// 3. extend the theme\nconst theme = extendTheme({ configT })\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <DAppProvider config = {config}>\n  \n  <StrictMode>\n    <ChakraProvider config={configT}>\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n      <CSSReset/>\n      <App />\n      \n    </ChakraProvider>\n  </StrictMode>\n  \n  </DAppProvider>,\n  rootElement\n);\n"],"sourceRoot":""}