{"version":3,"sources":["components/img/bnb.svg","components/img/logotothemars.png","components/ui-components/Nav.js","components/contracts/ContractAddress.jsx","components/img/logotothemars.svg","components/contracts/hooks/MartianSwapReferralHooks.jsx","components/img/metamask.png","components/img/trustwallet.svg","components/img/HowToBuy/first_img.png","components/img/HowToBuy/second_img.png","components/img/HowToBuy/third_img.png","pages/test.js","App.jsx","index.jsx"],"names":["Nav","MartianSwapReferral","MartianSwapInterface","utils","Interface","abi","contract","Contract","ifReferrer","useEthers","activateBrowserWallet","account","chainId","active","useContractCall","address","method","args","useContractMethod","methodName","useContractFunction","state","send","Test","price","Price","getTime","GetTime","owner","Owner","remain","RemainingToken","tokenAddress","TokenAddress","addReferal","hasReferrer","useState","referral","setReferral","useSendTransaction","sendTransaction","toNumber","toString","value","onChange","e","target","onClick","to","parseEther","App","configT","initialColorMode","useSystemColorMode","config","readOnlyChainId","ChainId","BSC","readOnlyUrls","theme","extendTheme","rootElement","document","getElementById","ReactDOM","render","DAppProvider"],"mappings":"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","file":"static/js/main.67d17cfd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bnb.95c82668.svg\";","export default __webpack_public_path__ + \"static/media/logotothemars.2d026759.png\";","import React from \"react\";\r\nimport ConnectButton from \"./ConnectButton\";\r\nimport { HStack, Spacer, Icon, Image, Box, useMediaQuery, useColorMode } from \"@chakra-ui/react\";\r\nimport { AiFillHome } from \"react-icons/ai\";\r\nimport ColorModeChanger from \"./ColorModeChanger\";\r\nimport logotothemars from \"../img/logotothemars.png\"\r\n\r\nfunction Nav() {\r\n  const [isPC] = useMediaQuery(\"(min-width: 750px)\")\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  return (\r\n    <HStack\r\n      width=\"100%\"\r\n      h=\"60px\"\r\n      paddingLeft=\"5%\"\r\n      paddingRight=\"5%\"\r\n      minWidth=\"350px\"\r\n      zIndex=\"5\"\r\n    \r\n      \r\n      \r\n    >\r\n      <Box as=\"a\" href=\"https://www.tothemars.in\">\r\n      <Image\r\n        src={logotothemars}\r\n        href=\"www.tothemars.in\"\r\n        \r\n        boxSize=\"50px\"\r\n        objectFit=\"cover\"\r\n      ></Image>\r\n      </Box>\r\n      <Spacer />\r\n      <Box as=\"a\" href=\"https://www.tothemars.in\">\r\n      <Icon\r\n        boxSize=\"30px\"\r\n        color=\"orange.400\"\r\n        \r\n        as={AiFillHome}\r\n      />\r\n      </Box>\r\n      <ConnectButton />\r\n      \r\n      <ColorModeChanger/>\r\n    </HStack>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","// Mainnet\r\nexport const ToTheMarsMainnet = \"0x3ceac5F44c9287dAF2C5C8CCE0faE10897E356d1\"\r\n// export const MartianSwapMainnet = \"0x63799a4da0f96c77ac29caf54d765ea30392cc73\"\r\nexport const MartianSwapMainnet = \"0x69237D11e97bF0eF8Ef3b127571DAf4483275977\"\r\nexport const DevWallet = \"0xfc1B7a066a94a6Dc82a317Bb7E0CFc6Ceb03c9D0\"\r\nexport const PublicSaleWallet = \"0x4221aB99874412309A3C6c278e4C57Deb6FBFB31\"\r\nexport const MarsMissionReserveWallet = \"\"\r\nexport const rate = 25000\r\nexport const infuraID = \"https://mainnet.infura.io/v3/3165a249c65f4198bf57200109b8fadf\"\r\nexport const bscID = \"https://bsc-dataseed.binance.org/\"\r\nexport const bscIDTestnet = \"https://data-seed-prebsc-1-s1.binance.org:8545/\"\r\n//0x9DB0d4E672916Dac63eD03523C738b19DB7d6b0f\r\n//BSC Mainnet 0x69237D11e97bF0eF8Ef3b127571DAf4483275977\r\n//Testnet\r\n//Kovan 0x3ceac5F44c9287dAF2C5C8CCE0faE10897E356d1\r\nexport const MartianSwapReferral = \"0x69237D11e97bF0eF8Ef3b127571DAf4483275977\"\r\nexport const MartianSwap = \"0x69237D11e97bF0eF8Ef3b127571DAf4483275977\"\r\n\r\n// Test Network\r\nexport const MulticallAddress = \"0xa361e695a4A272Cb3fe411A9226ec2D3bB9EcD45\"\r\nexport const MartianSwapTestnet = \"0x249d4736F21c331a3B70a667bA0cddFC9181385f\"\r\nexport const ToTheMarsTestnet = \"0xac0b47198e3aa9921d86423f4f1d2ed35a99ce71\"","export default __webpack_public_path__ + \"static/media/logotothemars.984311b0.svg\";","import { ethers, utils} from \"ethers\";\r\nimport { Contract } from \"@ethersproject/contracts\";\r\nimport {useEthers, useContractCall, useContractFunction } from \"@usedapp/core\";\r\nimport {abi} from \"../abi/MartianSwapReferral.json\";\r\nimport { MartianSwapReferral, DevWallet} from \"../ContractAddress\";\r\n\r\n\r\nconst MartianSwapInterface = new utils.Interface(abi)\r\nconst contract = new Contract(MartianSwapReferral, MartianSwapInterface)\r\n\r\n\r\n\r\n\r\nexport function Price() {\r\n    const [price] = useContractCall({\r\n      abi: MartianSwapInterface,\r\n      address: MartianSwapReferral,\r\n      method: \"price\",\r\n      args: [],\r\n    }) ?? [];\r\n    return price;\r\n}\r\n\r\nexport function GetTime() {\r\n  const [getTime] = useContractCall({\r\n    abi: MartianSwapInterface,\r\n    address: MartianSwapReferral,\r\n    method: \"getTime\",\r\n    args: [],\r\n  }) ?? [];\r\n  return getTime;\r\n}\r\nexport function RemainingToken() {\r\n  const [remain] = useContractCall({\r\n    abi: MartianSwapInterface,\r\n    address: MartianSwapReferral,\r\n    method: \"remainingTokens\",\r\n    args: [],\r\n  }) ?? [];\r\n  var x = remain/10**18;\r\n  return x;\r\n}\r\n\r\nexport function TokenAddress() {\r\n  const [tokenAddress] = useContractCall({\r\n    abi: MartianSwapInterface,\r\n    address: MartianSwapReferral,\r\n    method: \"token\",\r\n    args: [],\r\n  }) ?? [];\r\n  return tokenAddress;\r\n}\r\n\r\nexport function Owner() {\r\n  const [owner] = useContractCall({\r\n    abi: MartianSwapInterface,\r\n    address: MartianSwapReferral,\r\n    method: \"owner\",\r\n    args: [],\r\n  }) ?? [];\r\n  return owner;\r\n}\r\n\r\nexport function ifReferrer() {\r\n  const { activateBrowserWallet, account, chainId, active } = useEthers();\r\n  const [hasReferrer] = useContractCall({\r\n    abi: MartianSwapInterface,\r\n    address: MartianSwapReferral,\r\n    method: \"hasReferrer\",\r\n    args: [\"0x1631dE59cF2F97DeBA529df71347F6dA0B790419\"],\r\n  }) ?? [];\r\n  return hasReferrer;\r\n}\r\n\r\nexport function useContractMethod(methodName) {\r\n  const {state, send} = useContractFunction(contract, methodName, {})\r\n  return {state, send};\r\n}","export default __webpack_public_path__ + \"static/media/metamask.4f06ed22.png\";","export default __webpack_public_path__ + \"static/media/trustwallet.123a2360.svg\";","export default __webpack_public_path__ + \"static/media/first_img.bff60a86.png\";","export default __webpack_public_path__ + \"static/media/second_img.94f7d512.png\";","export default __webpack_public_path__ + \"static/media/third_img.0bfa2a5c.png\";","import React, {useState} from \"react\";\r\nimport {Price, GetTime, Owner, RemainingToken, TokenAddress, useContractMethod, ifReferrer} from \"../components/contracts/hooks/MartianSwapReferralHooks\";\r\nimport { Text, VStack, Input, Button } from \"@chakra-ui/react\";\r\nimport { MartianSwapReferral, DevWallet} from \"../components/contracts/ContractAddress\";\r\nimport {useSendTransaction} from \"@usedapp/core\";\r\nimport {utils} from \"ethers\";\r\n\r\n\r\n\r\nfunction Test() {\r\n    const price = Price();\r\n    const getTime = GetTime();\r\n    const owner = Owner();\r\n    const remain = RemainingToken();\r\n    const tokenAddress = TokenAddress();\r\n    const {state: addReferalState, send: addReferal} = useContractMethod(\"addReferal\");\r\n    const hasReferrer = ifReferrer();\r\n    \r\n\r\n    \r\n    const [referral, setReferral] = useState(DevWallet);\r\n    const { sendTransaction, state } = useSendTransaction();\r\n\r\n    function changeReferral(e) {\r\n\r\n        setReferral(e.target.value);\r\n\r\n    }\r\n\r\n    function handleaddReferal() {\r\n        if (referral) {\r\n            \r\n            addReferal(referral);\r\n            sendTransaction({ to: MartianSwapReferral, value: utils.parseEther(\"0.001\") })\r\n            \r\n        }\r\n        \r\n    }\r\n    return(\r\n        <VStack>\r\n\r\n        <Text>{price ? price.toNumber() : 0}</Text>\r\n        <Text>{getTime ? getTime.toNumber() : 0}</Text>\r\n        <Text>{owner ? owner.toString() : 0}</Text>\r\n        <Text>{remain ? remain.toString() : 0} MARTIAN</Text>\r\n        <Text>{tokenAddress ? tokenAddress.toString() : 0}</Text>\r\n        <Text>{hasReferrer? hasReferrer.toString() : 0}</Text>\r\n\r\n        <Input\r\n        value={referral}\r\n        onChange={changeReferral}\r\n        \r\n        >\r\n        </Input>\r\n        <Button\r\n        onClick = {handleaddReferal}\r\n        \r\n        >Add Referrar</Button>\r\n        </VStack>\r\n    )\r\n} \r\n\r\nexport default Test;","import \"./App.css\"\nimport Nav from \"./components/ui-components/Nav\";\nimport MartianSwap from \"./components/ui-components/MartianSwap\";\nimport QRCodePay from \"./components/ui-components/QRCodePay\";\nimport HowToBuy from \"./components/ui-components/HowToBuy\";\nimport { VStack, Text } from \"@chakra-ui/react\";\nimport {Home} from \"./pages/Home\"\nimport Test from \"./pages/test\";\n\n\n\nexport default function App() {\n  return (\n    <VStack>\n      <Test/>\n      {/* <Nav />\n      <MartianSwap />\n      <QRCodePay />\n      <HowToBuy/> */}\n    \n      \n    </VStack>\n  );\n}\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChakraProvider, ColorModeScript, extendTheme, CSSReset } from \"@chakra-ui/react\";\nimport { DAppProvider, ChainId } from \"@usedapp/core\";\n\n\nimport App from \"./App\";\n\n\n\nconst configT =  {\n  initialColorMode: \"light\",\n  useSystemColorMode: false,\n\n}\n\nconst config = {\n  readOnlyChainId: ChainId.BSC,\n \n  readOnlyUrls: {\n    \n    [ChainId.BSC]: \"https://bsc-dataseed.binance.org/\",\n  },\n}\n// 3. extend the theme\nconst theme = extendTheme({ configT })\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <DAppProvider config = {config}>\n  \n  <StrictMode>\n    <ChakraProvider config={configT}>\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n      <CSSReset/>\n      <App />\n      \n    </ChakraProvider>\n  </StrictMode>\n  \n  </DAppProvider>,\n  rootElement\n);\n"],"sourceRoot":""}